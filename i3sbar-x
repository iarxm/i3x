#!/usr/bin/env python

import sys
import json
import i3ipc

def get_non_x_workspaces(i3):
    """Get workspace information, excluding names starting with 'x'. """
    workspaces = i3.get_workspaces()
    x_workspaces = [ws for ws in workspaces if ws.name.startswith('x')]
    return x_workspaces

def print_line(message):
    """ Non-buffered printing to stdout. """
    sys.stdout.write(message + '\n')
    sys.stdout.flush()

def read_line():
    """ Interrupted respecting reader for stdin. """
    # try reading a line, removing any extra whitespace
    try:
        line = sys.stdin.readline().strip()
        # i3status sends EOF, or an empty line
        if not line:
            sys.exit(3)
        return line
    # exit on ctrl-c
    except KeyboardInterrupt:
        sys.exit()

if __name__ == '__main__':
    i3 = i3ipc.Connection()
    print_line(read_line()) # skip first line which contains version header
    print_line(read_line()) # skip 2nd line containing start of infinite array

    while True:
        line, prefix = read_line(), ''
        # ignore comma at start of lines
        if line.startswith(','):
            line, prefix = line[1:], ','

        j = json.loads(line)
        non_x_ws = get_non_x_workspaces(i3)
        #j.insert(0, {'full_text': '      ', 'name': 'workspace_info'})

        for ws in non_x_ws:
            j.insert(0, {'full_text': '%s' % ws.name, 'name': 'workspace_info'})

        j.insert(0, {'full_text': '|', 'name': 'workspace_info'})
        print_line(prefix+json.dumps(j))



