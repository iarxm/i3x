#!/usr/bin/env python

import sys
import i3ipc
import json

def get_workspaces(i3):
    """ Split workspaces into 'x' and non-'x' groups. """
    workspaces = i3.get_workspaces()

    # Convert workspace object to a dictionary without the 'rect' attribute
    def workspace_to_dict(ws):
        ws_dict = ws.__dict__
        ws_dict.pop('rect', None)  # Remove the 'rect' attribute if it exists
        return ws_dict

    # Grouping workspaces
    yx_wss = [workspace_to_dict(ws) for ws in workspaces if ws.name.startswith('x')]
    nx_wss = [workspace_to_dict(ws) for ws in workspaces if not ws.name.startswith('x')]

    # Insert a space separator if both groups are present
    combined = yx_wss + ([{'full_text': '   ', 'separator': False, 'separator_block_width': 50}] if yx_wss and nx_wss else []) + nx_wss

    return combined


def update_status_line(i3, event):
    """ Update the status line upon workspace events. """
    workspace_info = get_workspaces(i3)
    # Convert the combined workspace info to JSON and print
    sys.stdout.write(json.dumps(workspace_info) + '\n')
    sys.stdout.flush()

if __name__ == '__main__':
    i3 = i3ipc.Connection()
    i3.on('workspace', update_status_line)
    i3.main()  # Start the event loop

