#!/bin/env bash

# IAROM MADDEN mail@iarom.org
# i3 extensions

_ini()
{
    declare -i ws_n
    i3win_configs="${HOME}/.config/i3/x-window.config"
    focus_parent="Shift+Ctrl+K"
    focus_child="Shift+Ctrl+j"
    ws_n_cache="/tmp/i3n"
    [ -f ${ws_n_cache} ] || touch ${ws_n_cache}
}

_prn() { printf "%s \n" ${1} ; }

_set_wid_c() { wid_c=$(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5); }

_print_ws_n()
{
    i3-msg -t get_workspaces \
        | jq '.[] | select(.focused==true).name' \
        | cut -d"\"" -f2
}

_set_ws_n()  { ws_n="$(_print_ws_n)"; }

_sav_ws_n()  { echo ${ws_n} > ${ws_n_cache}; }

_set_ws_p()  { ws_p="$(cat ${ws_n_cache})"; }

_cl_cache()  { echo "" > ${ws_n_cache}; }

# neither are suitable; write a python program instead, to display the ws number for 1 second at the bottom; as an overlay
#_ws_notif() { notify-send -u low "$ws_n";}
#_ws_show() { i3-msg "bar mode toggle"; sleep 1; i3-msg "bar mode toggle"; }

_ws_nav_l()  { _set_ws_n; i3-msg workspace $((ws_n - 1)); } #_ws_show; }

_ws_nav_r()  { _set_ws_n; i3-msg workspace $((ws_n + 1)); } #_ws_show; }

_foc_ws_n()  { i3-msg "workspace ${ws_n}" >/dev/null 2>&1; }

_foc_wid_c() { i3-msg -q "[id="${wid_c}"] focus" >/dev/null 2>&1; }

# equalise nvim

_eq_pids_nvim()  { pgrep nvim; }

_eq_set_pid()
{
    PID=$(\
        ps -o ppid= -p "${PID}" |\
            awk '{print $1}'
    )
}
#_prn "PID: $PID"; }

_eq_set_win_id()
{
    WID=$(\
        wmctrl -lp |\
            awk -v pid="${PID}" '$3 == pid {print $1}'
    )
}

_eq_set_id_while_tst()
{
    [ -z "${WID}" ] || return 1
    [ -n "${PID}" ] || return 1
    [ ${PID} -gt 1 ] || return 1
    [ ${c:="1"} -lt 10 ] || return 1
}

_eq_set_id_iterate()
{
    while _eq_set_id_while_tst; do 
        _eq_set_pid
        _eq_set_win_id
        c=$((c + 1))
    done
}

_eq_x()
{
    [ -n "${WID}" ] || return
    i3-msg -q "[id=${WID}] focus"
    sleep 0.25
    xdotool key "semicolon+e"
    unset WID
}

_eq_all_nvim()
{
    # get pid of all nvim instances
    _set_wid_c
    _scratch
    for PID in $(_eq_pids_nvim); do # iterate over each pid
        _eq_set_id_iterate
        _eq_x
    done
    _scratch
    _foc_wid_c
}


# equalise all

_scratch()
{
    i3-msg -q '[con_mark=.*] scratchpad show' 2> /dev/null
    i3-msg -q '[class=.*] scratchpad show' 2> /dev/null
}

_prnt_wincmds() { grep -Ev '^\s*#|^$' "${1}" | sed -r 's/^for_window //'; }

_win_cmds()     { _prnt_wincmds "${i3win_configs}"; }

#_cbar_reload()  { pkill i3sbar-c; sleep 0.3; i3sbar-c & }
_cbar_reload()  { systemctl --user restart xbar.service & }

_resize_winls()
{
    # send i3 cmd lists from file to i3-msg
    IFS=$'\n' # comments & for_window rm'd; regex  '^\s*#|^$' todo
    for i in $(_win_cmds); do
        i3-msg -q "${i}" & #echo "$i"
    done
}

_normalise()
{
    # on monitor resolution change
    _cbar_reload &
    _resize_winls 
    _eq_all_nvim
}


_stf()
{
    # floating win binds
    class="${1}"; shift 1; exc="${@}"

    [ -n "${exc}" ] && {
        st -c "${class}" zsh -i -c "${exc}" & } || {
        st -c "${class}" & }

    sleep 0.3
    i3-msg '[class="'"${class}"'"] move scratchpad' 2>/dev/null
    i3-msg '[class="'"${class}"'"] scratchpad show' 2>/dev/null
}


_xxf()
{
    class="${1}"; shift 1; exc="${@}"

    #echo $exc
    eval ${exc} &

    sleep 0.4
    i3-msg '[class="'"${class}"'"] move scratchpad' 2>/dev/null
    i3-msg '[class="'"${class}"'"] scratchpad show' 2>/dev/null
}

# floating workspaces

_l_tabd() { i3-msg "layout tabbed";}

_set_hsplit_x()
{
    i3-msg "focus parent"
    i3-msg "split h"
    ${1}
}

_set_hsplit()
{
    _l_tabd
    st -c hsplitx ${cmda} & sleep 0.5s
    _set_hsplit_x ${1}
}

_wcontainer()
{
    i3-msg "focus parent"
    i3-msg "focus parent"
    i3-msg "move container to workspace number ${ws_n}"
    _foc_ws_n
}
    #kill $(wmctrl -lpx | awk '/tabbedx/ {print $3}')
    #- no need, handy to have the window there

_ini_float()
{
    mark="${1}"
    class="${mark}"
    _set_ws_n
    i3-msg "workspace 7"
    _l_tabd 
    st -c fl_tmp & sleep 0.4
}

_set_float()
{
    sleep "${1}"
    #i3-msg "layout tabbed"
    i3-msg "focus parent"
    i3-msg "mark ${mark}"
    i3-msg "move scratchpad"
    i3-msg "workspace ${ws_n}"
    i3-msg "[con_mark=${mark}] scratchpad show"
    i3-msg "[con_mark=${mark}] move position 0ppt 0ppt"
    i3-msg "[con_mark=${mark}] resize set 100ppt 100ppt"
    i3-msg '[class="'"${class}"'"] move scratchpad'
    #xdotool key "semicolon+e"
    i3-msg "[con_mark=${mark}] scratchpad show"
    kill $(pgrep -f "st -c fl_tmp")
}

_eloop() { for i in ${@}; do ${i}; done }

_ws_x()
{
  mark=${1}
  sleepx=${2}; shift 2
  _ini_float "${mark}"
  _eloop ${@}
  _set_float ${sleepx}
}

# workspaces : nav + custom names

_ws_go() { i3-msg "workspace ${1}" >/dev/null 2>&1; }

_ws_go_abc()
{
    ws_x="${1}"
    _set_ws_n
    _set_ws_p

    if [ ! -n "$(echo ${ws_n} | grep "[aA-zZ]")" ]
    then
        _sav_ws_n
        _ws_go ${ws_x}

    elif { [ ${ws_n} == ${ws_x} ] && [ -n "${ws_p}" ]; }
    then
        _ws_go ${ws_p}
        _cl_cache
    
    else
        _ws_go ${ws_x}
    
    fi 
}

_ws_y()
{
    ws_x=${1}; shift 1
    _ws_go_abc "${ws_x}"
    #sleep 0.5
    _set_ws_n
    [ ${ws_n} == ${ws_x} ] || return

    _eloop ${@}
}

_mon_x()
{
    i3-msg "workspace ${1}" >/dev/null 2>&1
    i3-msg "move workspace to output ${2}" >/dev/null 2>&1
}

_mons()
{
    mon_a="${1}"
    mon_b="${2}"
    sleep 0.5s # mon_a
    # TODO: make into 2 oneline loops
    _set_ws_n
    _mon_x 1 ${mon_a}
    _mon_x 2 ${mon_a}
    _mon_x 3 ${mon_a}
    _mon_x 4 ${mon_a}
    _mon_x 5 ${mon_a}
    _mon_x 6 ${mon_a}
    _mon_x 7 ${mon_a}
    _mon_x 8  ${mon_b}
    _mon_x 9  ${mon_b}
    _mon_x 10 ${mon_b}
    _mon_x xoo ${mon_b}
    _mon_x xml ${mon_b}
    _mon_x xau ${mon_b}
    #_mon_x 
    _foc_ws_n
}

_foc_fix()
{
    # fix focus stealing windows in i3 - tabbed preview activity.
    # todo: remove i3scratch dependencies # make a python script
    class="${1}"
    wid_x=$(xdotool search --class "${class}")
    echo "${wid_x}"
    [ ! -n "${wid_x}" ] && exit
    testx=$(i3scratch | grep "${class}")
    [ -n "${testx}" ] \
        && xdotool windowactivate --sync "${wid_x}" \
        || i3-msg '[class="^'"${class}"'$"] scratchpad show' 2>/dev/null
}

#_focus_scratch_cons() { i3-msg '[con_mark="^'"$1"'$"] scratchpad show'; } #overkill factoring

main()
{

    cmd="${1}" && [ -n "${1}" ] && shift 1
    
    _ini

    case ${cmd} in
        r|w.resize.all)   _normalise ;;
        eq)               _equalise_all_nvim ;;
        mon)              _mons ${@} ;;
        ff|ffxr)          _foc_fix "${@}" ;;
        wr|right)         _ws_nav_r ;;
        wl|left)          _ws_nav_l ;;
        wx|numb)          _ws_go_abc "${1}" ;;
        fl-mk|bind-mark)  _wmark ${@} ;; #TODO
        fl-st|bind-st)    _stf ${@} ;;
        xxf)              _xxf ${@} ;;
        *|custom)         ${@} ;;
    esac 
}

main "${@}"
#_sav_ws_n()  { _print_ws_n > ${ws_n_cache}; }
